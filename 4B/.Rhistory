source("http://www.openintro.org/stat/data/arbuthnot.R")
dim(arbuthnot)
names(arbuthnot)
arbuthnot$boys
arbuthnot$boys
plot(x = arbuthnot$year,y = arbuthnot$girls)
plot(x = arbuthnot$year,y = arbuthnot$girls, type="l")
?plot
arbuthnot$girls + arbuthnot$boys
plot(arbuthnot$year, arbuthnot$girls + arbuthnot$boys
, type = "l")
arbuthnot$boys / arbuthnot$girls
arbuthnot$boys/(arbuthnot$boys + arbuthnot$girls)
#Minha vez
#Proporção de meninos em relação ao tempo
plot(arbuthnot$year, arbuthnot$boys / (arbuthnot$boys + arbuthnot$gilrs), type = "l")
#Minha vez
#Proporção de meninos em relação ao tempo
plot(arbuthnot$year, y=arbuthnot$boys/(arbuthnot$boys + arbuthnot$gilrs), type = "l")
arbuthnot$boys/(arbuthnot$boys + arbuthnot$gilrs)
arbuthnot$boys
arbuthnot$boys/ arbuthnot$gilrs
#Minha vez
#Proporção de meninos em relação ao tempo
plot(arbuthnot$year, y=arbuthnot$boys/(arbuthnot$boys + arbuthnot$girls), type = "l")
arbuthno
arbuthnot$boys + arbuthnot$girls
arbuthnot$boys
#Minha vez
source("http://www.openintro.org/stat/data/present.R")
#Anos
present
dim(present$year)
length(present$year)
dim(present)
names(present)
names(present)
#3)
present$girls > present$boys
#3)
present$boys > present$girls
#3)
present$boys + present$girls
#3)
plot(present$boys + present$girls)
#3)
sum(present$boys + present$girls)
View(present)
#3)
total <- sum(present$boys + present$girls)
present%boys / total
present$boys / total
sum(present$boys )/ total
sum(present$girls )/ total
sum(present$boys )/ total > sum(present$girls )/ total
# 4)
plot(present$year, present$girls / present$boys)
?plot
# 4)
plot(present$year, present$girls / present$boys, typle="b")
?plot
# 4)
plot(present$year, present$girls / present$boys, type="b")
# 4)
plot(present$year, present$girls / present$boys)
# 4)
plot(present$year, present$girls / present$boys,type="l")
# 4)
plot(present$year, present$girls / present$boys)
arbuthnot$b'oy
a
''
#5)
max(present$boys + present$girls)
#5)
present$year[max(present$boys + present$girls)]
subset(present$year, present$boys + present$girls=max(present$boys + present$girls))
subset(present$year, present$boys + present$girls==max(present$boys + present$girls))
View(present)
View(present)
p = c([150,200,250,200,200,250,300,450,200,200,250,300,200,150,300,350,200,250,200,250,350,400,400,250,350,250,200,250,350,300)
p = c(150,200,250,200,200,250,300,450,200,200,250,300,200,150,300,350,200,250,200,250,350,400,400,250,350,250,200,250,350,300)
std(p)
summary(p)
sd(p)
download.file("http://www.openintro.org/stat/data/ames.RData", destfile = "ames.RData")
load("ames.RData")
n_samp
n_samps = 50
samp_size = 60
samp_mean <- rep(NA, n_samps)
samp_sd <- rep(NA, n_samps)
for (i in 1:n_samps) {
samp <- sample(area, samp_size)
samp_mean[i] <- mean(samp)
samp_sd[i] <- sd(samp)
}
n_samps = 50
samp_size = 60
samp_mean <- rep(NA, n_samps)
samp_sd <- rep(NA, n_samps)
for (i in 1:n_samps) {
samp <- sample(area, samp_size)
samp_mean[i] <- mean(samp)
samp_sd[i] <- sd(samp)
}
samp_lower <- samp_mean - 1.96 * samp_sd / sqrt(samp_size)
samp_upper <- samp_mean + 1.96 * samp_sd / sqrt(samp_size)
plot_ci(samp_lower, samp_upper, mean(area))
area <- ames$Gr.Liv.Area
n_samps = 50
samp_size = 60
samp_mean <- rep(NA, n_samps)
samp_sd <- rep(NA, n_samps)
for (i in 1:n_samps) {
samp <- sample(area, samp_size)
samp_mean[i] <- mean(samp)
samp_sd[i] <- sd(samp)
}
samp_lower <- samp_mean - 1.96 * samp_sd / sqrt(samp_size)
samp_upper <- samp_mean + 1.96 * samp_sd / sqrt(samp_size)
plot_ci(samp_lower, samp_upper, mean(area))
#1
n_samps = 50
s_size = 60
s_mean <- rep(NA, n_samps)
s_sd <- rep(NA, n_samps)
for (i in 1:n_samps) {
samp <- sample(area, s_size)
s_mean[i] <- mean(samp)
s_sd[i] <- sd(samp)
}
samp_lower <- s_mean-1.96 * s_sd/sqrt(s_size)
samp_upper <- s_mean+1.96 * s_sd/sqrt(s_size)
plot_ci(samp_lower, samp_upper, mean(area))
#1
n_samps = 50
s_size = 60
s_mean <- rep(NA, n_samps)
s_sd <- rep(NA, n_samps)
for (i in 1:n_samps) {
samp <- sample(area, s_size)
s_mean[i] <- mean(samp)
s_sd[i] <- sd(samp)
}
samp_lower <- s_mean-1.96 * s_sd/sqrt(s_size)
samp_upper <- s_mean+1.96 * s_sd/sqrt(s_size)
plot_ci(samp_lower, samp_upper, mean(area))
#1
n_samps = 50
s_size = 60
s_mean <- rep(NA, n_samps)
s_sd <- rep(NA, n_samps)
for (i in 1:n_samps) {
samp <- sample(area, s_size)
s_mean[i] <- mean(samp)
s_sd[i] <- sd(samp)
}
samp_lower <- s_mean-1.96 * s_sd/sqrt(s_size)
samp_upper <- s_mean+1.96 * s_sd/sqrt(s_size)
plot_ci(samp_lower, samp_upper, mean(area))
#2
48/50
48/50
samp_lower <- samp_mean - 1.645 * samp_sd / sqrt(samp_size)
samp_upper <- samp_mean + 1.645 * samp_sd / sqrt(samp_size)
plot_ci(samp_lower, samp_upper, mean(area))
/home/naelsondouglas/Desktop/Matérias/Estatística/Laboratórios/4B
/home/naelsondouglas/Desktop/Matérias/Estatística/Laboratórios/4Bs
setwd("~/naelson/ufal/estatística")
setwd("/home/naelsondouglas/Desktop/Matérias/Estatística/Laboratórios/4B")
rmarkdown::render("EX-04b.R")
rmarkdown::render("EX-04b.R")
#3
samp_lower <- samp_mean-1.645 * samp_sd/sqrt(samp_size)
samp_upper <- samp_mean+1.645 * samp_sd/qrt(samp_size)
samp_upper <- samp_mean+1.645 * samp_sd/sqrt(samp_size)
plot_ci(samp_lower, samp_upper, mean(area))
plot_ci(samp_lower, samp_upper, mean(area))
plot(1)
plot_ci(samp_lower, samp_upper, mean(area))
rmarkdown::render("EX-04b.R")
#2
print("90%, com um valor crítico de 1.645")
rmarkdown::render("EX-04b.R")
